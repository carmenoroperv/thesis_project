import pandas as pd
from pathlib import Path
import os


paramspace = pd.read_csv("data/metadata/paramspace_phaseI.csv", index_col='pt_id')
TUMOR_FILES = paramspace["tumor_bam_path"]

SAMPLES = paramspace.index
OUTPUT_PT_FOLDER = paramspace["output_path_unique_kmers"]

QUALITIES = expand("data/{pt_tumor}/{output_f_tumor}/tumor_bam_base_qualities.csv", zip, pt_tumor=SAMPLES, output_f_tumor = OUTPUT_PT_FOLDER)
OUTPUT_FILTERED_TUMOR = expand("data/{pt_tumor}/{output_f_tumor}/tumor_WGS_reads_filtered_maxquality_based.bam", zip, pt_tumor=SAMPLES, output_f_tumor = OUTPUT_PT_FOLDER)

rule all: 
    input:  QUALITIES, OUTPUT_FILTERED_TUMOR


rule get_base_qualities:
    input:
        bam_file = lambda wildcards: str(Path(TUMOR_FILES[wildcards.pt_tumor]))
    output: 
        qualities = "data/{pt_tumor}/{output_f_tumor}/tumor_bam_base_qualities.csv"
    conda: 
        "envs/ctDNA_pysam.yml"
    script:
        "scripts_utils/find_bam_max_quality.py"   
    
rule filter_tumor_bams:
    input:
        bam_file = lambda wildcards: str(Path(TUMOR_FILES[wildcards.pt_tumor])),
        qualities_file = "data/{pt_tumor}/{output_f_tumor}/tumor_bam_base_qualities.csv"
    output: 
        filtered_bam_file = "data/{pt_tumor}/{output_f_tumor}/tumor_WGS_reads_filtered_maxquality_based.bam"
    conda: 
        "envs/ctDNA_pysam.yml"
    script:
        "scripts_utils/filtering_tumor_bam_maxquality_only.py"