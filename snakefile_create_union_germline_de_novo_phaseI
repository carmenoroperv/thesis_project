
import pandas as pd
from pathlib import Path
import os

####MAKE THE TMP FOLDER WITH WILDCARD NAME!

paramspace = pd.read_csv("data/metadata/paramspace_phaseI.csv", index_col='pt_id')
GERMLINE_FILES = paramspace["germline_bam_path"]
SAMPLES = paramspace.index
OUTPUT_PT_FOLDER = paramspace["output_path_unique_kmers"]





OUTPUT_GERMLINE = expand("data/{pt_normal}/{output_f_normal}/de_novo_germline/germline_kmers_cs1e9.kmc_pre", zip, pt_normal=SAMPLES, output_f_normal = OUTPUT_PT_FOLDER)
OUTPUT_UNION_GERMLINE = "data/germline_union_de_novo.kmc_pre"
PLOTDATA_FILTERED = "data/plotdata_germline_union_de_novo_filtered.txt"
UNION_FILTERED = "data/plotdata_germline_union_de_novo_and_k50_filtered.txt"



for pt, fd in zip(SAMPLES, OUTPUT_PT_FOLDER):
    tmp_folder_tumor = "tmp_normal/tmp_normal_" + str(pt) + "/" + str(fd) + "_de_novo_germline/"
    Path(tmp_folder_tumor).mkdir(parents=True, exist_ok=True)
    
    output_folder = "data/" + str(pt) + "/" + str(fd)  + "/"
    Path(output_folder).mkdir(parents=True, exist_ok=True)


rule all: 
    input:  OUTPUT_GERMLINE, OUTPUT_UNION_GERMLINE, PLOTDATA_FILTERED, UNION_FILTERED


####INTERSECTION####


rule high_cs_count_germline_de_novo:
    input:
        fasta_file = "data/{pt_normal}/{output_f_normal}/de_novo_germline/germline.fasta"
    output: 
        kmers_pre = "data/{pt_normal}/{output_f_normal}/de_novo_germline/germline_kmers_cs1e9.kmc_pre", 
        kmers_suf = "data/{pt_normal}/{output_f_normal}/de_novo_germline/germline_kmers_cs1e9.kmc_suf"
    resources: 
        mem_mb = 300000, 
        time = "6:00:00"
    params:
        tmpdir = "tmp_normal/tmp_normal_{pt_normal}/{output_f_normal}_de_novo_germline/"
    conda: 
        "envs/ctDNA.yml"
    threads: 1
    shell:
        "kmc -k50 -m300 -t{threads} -ci0 -cs1000000000 -cx1000000000 -fm {input.fasta_file} data/{wildcards.pt_normal}/{wildcards.output_f_normal}/de_novo_germline/germline_kmers_cs1e9 {params.tmpdir}"




        
rule create_union_germline_C04689_C04816_de_novo:
    input:
        germline1 = "data/C04689/C123T04689D_frfr_N295-450/de_novo_germline/germline_kmers_cs1e9.kmc_pre",
        germline2 = "data/C04816/C265T04816D_frfr_N295-451/de_novo_germline/germline_kmers_cs1e9.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816.kmc_suf"
    threads: 1
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/C04689/C123T04689D_frfr_N295-450/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 data/C04816/C265T04816D_frfr_N295-451/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816 -ci0 -cx1000000000 -cs1000000000"

rule create_union_germline_C04837_C04849_de_novo:
    input:
        germline1 = "data/C04837/C110T04837D_frfr_N295-452/de_novo_germline/germline_kmers_cs1e9.kmc_pre",
        germline2 = "data/C04849/C93T04849D_frfr_N295-453/de_novo_germline/germline_kmers_cs1e9.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04837__C04849.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04837__C04849.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/C04837/C110T04837D_frfr_N295-452/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 data/C04849/C93T04849D_frfr_N295-453/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04837__C04849 -ci0 -cx1000000000 -cs1000000000"

rule create_union_germline_C04873_C04874_de_novo:
    input:
        germline1 = "data/C04873/C77T04873D_frfr_N295-454/de_novo_germline/germline_kmers_cs1e9.kmc_pre",
        germline2 = "data/C04874/C82T04874D_frfr_N295-455/de_novo_germline/germline_kmers_cs1e9.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/C04873/C77T04873D_frfr_N295-454/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 data/C04874/C82T04874D_frfr_N295-455/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874 -ci0 -cx1000000000 -cs1000000000"

rule create_union_germline_C04886_C04887_de_novo:
    input:
        germline1 = "data/C04886/C111T04886D_frfr_N295-456/de_novo_germline/germline_kmers_cs1e9.kmc_pre",
        germline2 = "data/C04887/C94T04887D_frfr_N295-457/de_novo_germline/germline_kmers_cs1e9.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04886__C04887.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04886__C04887.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/C04886/C111T04886D_frfr_N295-456/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 data/C04887/C94T04887D_frfr_N295-457/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04886__C04887 -ci0 -cx1000000000 -cs1000000000"
    
rule create_union_germline_C05048_C05073_de_novo:
    input:
        germline1 = "data/C05048/C74T05048D_frfr_N295-458/de_novo_germline/germline_kmers_cs1e9.kmc_pre",
        germline2 = "data/C05073/C59T05073D_frfr_N295-459/de_novo_germline/germline_kmers_cs1e9.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/C05048/C74T05048D_frfr_N295-458/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 data/C05073/C59T05073D_frfr_N295-459/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073 -ci0 -cx1000000000 -cs1000000000"
    
rule create_union_germline_C05084_C05118_de_novo:
    input:
        germline1 = "data/C05084/C71T05084D_frfr_N295-460/de_novo_germline/germline_kmers_cs1e9.kmc_pre",
        germline2 = "data/C05118/C146T05118D_frfr_N295-461/de_novo_germline/germline_kmers_cs1e9.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05084__C05118.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05084__C05118.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/C05084/C71T05084D_frfr_N295-460/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 data/C05118/C146T05118D_frfr_N295-461/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05084__C05118 -ci0 -cx1000000000 -cs1000000000"
    
rule create_union_germline_C05194_C05234_de_novo:
    input:
        germline1 = "data/C05194/C127T05194D_frfr_N295-462/de_novo_germline/germline_kmers_cs1e9.kmc_pre",
        germline2 = "data/C05234/C97T05234D_frfr_N295-463/de_novo_germline/germline_kmers_cs1e9.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/C05194/C127T05194D_frfr_N295-462/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 data/C05234/C97T05234D_frfr_N295-463/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234 -ci0 -cx1000000000 -cs1000000000"
    
    
rule create_union_germline_C04689_C04816_C04837_C04849_de_novo:
    input:
        germline1 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816.kmc_pre",
        germline2 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04837__C04849.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816 -ci0 -cx1000000000 data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04837__C04849 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849 -ci0 -cx1000000000 -cs1000000000"

rule create_union_germline_C04873_C04874_C04886_C04887_de_novo:
    input:
        germline1 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874.kmc_pre",
        germline2 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04886__C04887.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874__C04886__C04887.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874__C04886__C04887.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874 -ci0 -cx1000000000 data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04886__C04887 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874__C04886__C04887 -ci0 -cx1000000000 -cs1000000000"
    
rule create_union_germline_C05048_C05073_C05084_C05118_de_novo:
    input:
        germline1 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073.kmc_pre",
        germline2 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05084__C05118.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073 -ci0 -cx1000000000 data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05084__C05118 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118 -ci0 -cx1000000000 -cs1000000000"
    
rule create_union_germline_C05194_C05234_C05703_de_novo:
    input:
        germline1 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234.kmc_pre",
        germline2 = "data/C05703/C76T05703D_frfr_N295-464/de_novo_germline/germline_kmers_cs1e9.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234__C05703.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234__C05703.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234 -ci0 -cx1000000000 data/C05703/C76T05703D_frfr_N295-464/de_novo_germline/germline_kmers_cs1e9 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234__C05703 -ci0 -cx1000000000 -cs1000000000"
    

rule create_union_germline_C04689_C04816_C04837_C04849_C04873_C04874_C04886_C04887_de_novo:
    input:
        germline1 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849.kmc_pre",
        germline2 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874__C04886__C04887.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849__C04873__C04874__C04886__C04887.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849__C04873__C04874__C04886__C04887.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849 -ci0 -cx1000000000 data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04873__C04874__C04886__C04887 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849__C04873__C04874__C04886__C04887 -ci0 -cx1000000000 -cs1000000000"
    
rule create_union_germline_C05048_C05073_C05084_C05118_C05194_C05234_C05703_de_novo:
    input:
        germline1 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118.kmc_pre",
        germline2 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234__C05703.kmc_pre"
    output: 
        kmers_pre = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118__C05194__C05234__C05703.kmc_pre",
        kmers_suf = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118__C05194__C05234__C05703.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118 -ci0 -cx1000000000 data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05194__C05234__C05703 -ci0 -cx1000000000 union data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118__C05194__C05234__C05703 -ci0 -cx1000000000 -cs1000000000"
    
rule create_union_germline_C04689_C04816_C04837_C04849_C04873_C04874_C04886_C04887_C05048_C05073_C05084_C05118_C05194_C05234_C05703_de_novo:
    input:
        germline1 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849__C04873__C04874__C04886__C04887.kmc_pre",
        germline2 = "data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118__C05194__C05234__C05703.kmc_pre"
    output: 
        kmers_pre = "data/germline_union_de_novo.kmc_pre",
        kmers_suf = "data/germline_union_de_novo.kmc_suf"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    threads: 1
    conda: 
        "envs/ctDNA.yml"
    shell:
        "kmc_tools simple data/union_germline_combining_de_novo/germline_kmers_cs1e9_C04689__C04816__C04837__C04849__C04873__C04874__C04886__C04887 -ci0 -cx1000000000 data/union_germline_combining_de_novo/germline_kmers_cs1e9_C05048__C05073__C05084__C05118__C05194__C05234__C05703 -ci0 -cx1000000000 union data/germline_union_de_novo -ci0 -cx1000000000 -cs1000000000"



        
        
rule make_plotfile_germline_union_de_novo:
    input: 
        kmers_pre = "data/germline_union_de_novo.kmc_pre",
        kmers_suf = "data/germline_union_de_novo.kmc_suf"
    output: 
        plotdata = "data/plotdata_germline_union_de_novo.txt"
    resources: 
        mem_mb = 200000, 
        time = "2:00:00"
    conda:
        "envs/ctDNA.yml"
    shell: 
        "kmc_tools transform data/germline_union_de_novo -ci0 -cx1000000000 histogram {output.plotdata} -ci0 -cx1000000000"



rule filter_plotfile_germline_union_de_novo:
    input: 
        plotdata = "data/plotdata_germline_union_de_novo.txt"
    output: 
        plotdata_filtered = "data/plotdata_germline_union_de_novo_filtered.txt"
    resources: 
        mem_mb = 100000, 
        time = "2:00:00"
    conda:
        "envs/ctDNA.yml"
    shell: 
        "awk -F '\t' '$2!=0' {input.plotdata} > {output.plotdata_filtered}"
        
        
        
rule merge_de_novo_and_k50: 
    input: 
        kmers_de_novo_pre = "data/germline_union_de_novo.kmc_pre",
        kmers_pre = "data/germline_union.kmc_pre"
    output: 
        union_pre = "data/germline_union_de_novo_and_k50.kmc_pre"
    resources: 
        mem_mb = 200000, 
        time = "6:00:00"
    conda:
        "envs/ctDNA.yml"
    shell: 
        "kmc_tools simple data/germline_union -ci0 -cx1000000000   data/germline_union_de_novo -ci0 -cx1000000000 union data/germline_union_de_novo_and_k50 -ci0 -cs1000000000 -cx1000000000 -ocleft"
    

rule make_plotfile_germline_union_de_novo_and_k50:
    input: 
        kmers_pre = "data/germline_union_de_novo_and_k50.kmc_pre"
    output: 
        plotdata = "data/plotdata_germline_union_de_novo_and_k50.txt"
    resources: 
        mem_mb = 200000, 
        time = "2:00:00"
    conda:
        "envs/ctDNA.yml"
    shell: 
        "kmc_tools transform data/germline_union_de_novo_and_k50 -ci0 -cx1000000000 histogram {output.plotdata} -ci0 -cx1000000000"

rule filter_plotfile_germline_union_de_novo_and_k50:
    input: 
        plotdata = "data/plotdata_germline_union_de_novo_and_k50.txt"
    output: 
        plotdata_filtered = "data/plotdata_germline_union_de_novo_and_k50_filtered.txt"
    resources: 
        mem_mb = 100000, 
        time = "2:00:00"
    conda:
        "envs/ctDNA.yml"
    shell: 
        "awk -F '\t' '$2!=0' {input.plotdata} > {output.plotdata_filtered}"
